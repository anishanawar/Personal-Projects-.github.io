{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 731
        },
        "id": "o9yKlH9QOfqG",
        "outputId": "3c12aeeb-51d3-4f69-8edc-8ebc7a5155ac"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      SKU     Category  Weight (lbs)  Volume (cubic ft)  \\\n",
              "0   70897         Home         26.44              17.36   \n",
              "1   13940  Electronics         11.10               2.57   \n",
              "2   44052      Hygiene          2.48               0.62   \n",
              "3   65796         Home         51.59              86.04   \n",
              "4   94236       Sports         17.96               1.58   \n",
              "5   39729       Office          3.20               1.68   \n",
              "6   69591     Clothing          0.63               6.44   \n",
              "7   70768      Medical          2.16               3.36   \n",
              "8   55894     Clothing          0.54               2.65   \n",
              "9   95487       Office          4.19               5.85   \n",
              "10  83939      Hygiene          2.34               0.42   \n",
              "11  78438     Clothing          0.47               5.12   \n",
              "12  17904         Home         62.19              20.96   \n",
              "13  70838         Home         36.55               5.72   \n",
              "14  61944      Medical          3.14               3.80   \n",
              "15  67846  Electronics          0.76               2.01   \n",
              "16  89281         Home         13.51              51.14   \n",
              "17  78360      Medical          2.57               2.17   \n",
              "18  55306      Medical          0.15               2.32   \n",
              "19  17419       Office          1.96               3.59   \n",
              "\n",
              "    Total Inventory Picks  7AM - 8AM  8AM - 9AM  9AM -10AM  10AM - 11AM  \\\n",
              "0                     121          8          9         11           10   \n",
              "1                     275        112         65         46           27   \n",
              "2                     124          6          9          8           11   \n",
              "3                     359        190         42         67           28   \n",
              "4                     285        167         40         55           12   \n",
              "5                     279          5         26         44           30   \n",
              "6                     196          0          0          0            0   \n",
              "7                     245          0          0          0            0   \n",
              "8                     274          8         22         41           17   \n",
              "9                     222          0          0          0            0   \n",
              "10                    366        172         91         52           29   \n",
              "11                    487         32         63         77          103   \n",
              "12                    145          9         12         12           16   \n",
              "13                    239          6         23         45           19   \n",
              "14                    175          0          0          0            0   \n",
              "15                    268          8         19         45           21   \n",
              "16                    278        117         90         35           21   \n",
              "17                    446         30         46         59           88   \n",
              "18                    230         84         72         33           21   \n",
              "19                    493         50         61         56           88   \n",
              "\n",
              "    11AM - 12PM  12PM - 1PM  1PM - 2PM  2PM - 3PM  3PM - 4PM  4PM - 5PM  \\\n",
              "0            10          16         25         17         12          3   \n",
              "1            19           4          2          0          0          0   \n",
              "2             8          23         27         18         10          2   \n",
              "3            17          10          5          0          0          0   \n",
              "4             7           1          3          0          0          0   \n",
              "5            17          25         25         21         24         18   \n",
              "6             4           6         18         39         27         32   \n",
              "7             1           4         28         31         59         53   \n",
              "8            27          27         25         20         19         25   \n",
              "9             3           8         30         34         25         47   \n",
              "10           11           8          3          0          0          0   \n",
              "11           59          54         52         29         11          7   \n",
              "12           19          23         15         17         16          3   \n",
              "13           16          15         18         16         20         22   \n",
              "14            1           7         14         21         30         42   \n",
              "15           20          23         24         16         24         19   \n",
              "16            6           9          0          0          0          0   \n",
              "17           71          67         31         24         20          8   \n",
              "18           19           0          1          0          0          0   \n",
              "19           63          70         39         35         19          7   \n",
              "\n",
              "    5PM - 6PM  6PM - 7PM  7PM - 8PM  \n",
              "0           0          0          0  \n",
              "1           0          0          0  \n",
              "2           2          0          0  \n",
              "3           0          0          0  \n",
              "4           0          0          0  \n",
              "5          16         20          8  \n",
              "6          53         11          6  \n",
              "7          49         17          3  \n",
              "8          15         20          8  \n",
              "9          60         14          1  \n",
              "10          0          0          0  \n",
              "11          0          0          0  \n",
              "12          3          0          0  \n",
              "13         15         18          6  \n",
              "14         33         17         10  \n",
              "15         22         19          8  \n",
              "16          0          0          0  \n",
              "17          2          0          0  \n",
              "18          0          0          0  \n",
              "19          5          0          0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8efc9cac-1c13-4bc0-b668-fec9f718f297\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>SKU</th>\n",
              "      <th>Category</th>\n",
              "      <th>Weight (lbs)</th>\n",
              "      <th>Volume (cubic ft)</th>\n",
              "      <th>Total Inventory Picks</th>\n",
              "      <th>7AM - 8AM</th>\n",
              "      <th>8AM - 9AM</th>\n",
              "      <th>9AM -10AM</th>\n",
              "      <th>10AM - 11AM</th>\n",
              "      <th>11AM - 12PM</th>\n",
              "      <th>12PM - 1PM</th>\n",
              "      <th>1PM - 2PM</th>\n",
              "      <th>2PM - 3PM</th>\n",
              "      <th>3PM - 4PM</th>\n",
              "      <th>4PM - 5PM</th>\n",
              "      <th>5PM - 6PM</th>\n",
              "      <th>6PM - 7PM</th>\n",
              "      <th>7PM - 8PM</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>70897</td>\n",
              "      <td>Home</td>\n",
              "      <td>26.44</td>\n",
              "      <td>17.36</td>\n",
              "      <td>121</td>\n",
              "      <td>8</td>\n",
              "      <td>9</td>\n",
              "      <td>11</td>\n",
              "      <td>10</td>\n",
              "      <td>10</td>\n",
              "      <td>16</td>\n",
              "      <td>25</td>\n",
              "      <td>17</td>\n",
              "      <td>12</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>13940</td>\n",
              "      <td>Electronics</td>\n",
              "      <td>11.10</td>\n",
              "      <td>2.57</td>\n",
              "      <td>275</td>\n",
              "      <td>112</td>\n",
              "      <td>65</td>\n",
              "      <td>46</td>\n",
              "      <td>27</td>\n",
              "      <td>19</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>44052</td>\n",
              "      <td>Hygiene</td>\n",
              "      <td>2.48</td>\n",
              "      <td>0.62</td>\n",
              "      <td>124</td>\n",
              "      <td>6</td>\n",
              "      <td>9</td>\n",
              "      <td>8</td>\n",
              "      <td>11</td>\n",
              "      <td>8</td>\n",
              "      <td>23</td>\n",
              "      <td>27</td>\n",
              "      <td>18</td>\n",
              "      <td>10</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>65796</td>\n",
              "      <td>Home</td>\n",
              "      <td>51.59</td>\n",
              "      <td>86.04</td>\n",
              "      <td>359</td>\n",
              "      <td>190</td>\n",
              "      <td>42</td>\n",
              "      <td>67</td>\n",
              "      <td>28</td>\n",
              "      <td>17</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>94236</td>\n",
              "      <td>Sports</td>\n",
              "      <td>17.96</td>\n",
              "      <td>1.58</td>\n",
              "      <td>285</td>\n",
              "      <td>167</td>\n",
              "      <td>40</td>\n",
              "      <td>55</td>\n",
              "      <td>12</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>39729</td>\n",
              "      <td>Office</td>\n",
              "      <td>3.20</td>\n",
              "      <td>1.68</td>\n",
              "      <td>279</td>\n",
              "      <td>5</td>\n",
              "      <td>26</td>\n",
              "      <td>44</td>\n",
              "      <td>30</td>\n",
              "      <td>17</td>\n",
              "      <td>25</td>\n",
              "      <td>25</td>\n",
              "      <td>21</td>\n",
              "      <td>24</td>\n",
              "      <td>18</td>\n",
              "      <td>16</td>\n",
              "      <td>20</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>69591</td>\n",
              "      <td>Clothing</td>\n",
              "      <td>0.63</td>\n",
              "      <td>6.44</td>\n",
              "      <td>196</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>18</td>\n",
              "      <td>39</td>\n",
              "      <td>27</td>\n",
              "      <td>32</td>\n",
              "      <td>53</td>\n",
              "      <td>11</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>70768</td>\n",
              "      <td>Medical</td>\n",
              "      <td>2.16</td>\n",
              "      <td>3.36</td>\n",
              "      <td>245</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>28</td>\n",
              "      <td>31</td>\n",
              "      <td>59</td>\n",
              "      <td>53</td>\n",
              "      <td>49</td>\n",
              "      <td>17</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>55894</td>\n",
              "      <td>Clothing</td>\n",
              "      <td>0.54</td>\n",
              "      <td>2.65</td>\n",
              "      <td>274</td>\n",
              "      <td>8</td>\n",
              "      <td>22</td>\n",
              "      <td>41</td>\n",
              "      <td>17</td>\n",
              "      <td>27</td>\n",
              "      <td>27</td>\n",
              "      <td>25</td>\n",
              "      <td>20</td>\n",
              "      <td>19</td>\n",
              "      <td>25</td>\n",
              "      <td>15</td>\n",
              "      <td>20</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>95487</td>\n",
              "      <td>Office</td>\n",
              "      <td>4.19</td>\n",
              "      <td>5.85</td>\n",
              "      <td>222</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>8</td>\n",
              "      <td>30</td>\n",
              "      <td>34</td>\n",
              "      <td>25</td>\n",
              "      <td>47</td>\n",
              "      <td>60</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>83939</td>\n",
              "      <td>Hygiene</td>\n",
              "      <td>2.34</td>\n",
              "      <td>0.42</td>\n",
              "      <td>366</td>\n",
              "      <td>172</td>\n",
              "      <td>91</td>\n",
              "      <td>52</td>\n",
              "      <td>29</td>\n",
              "      <td>11</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>78438</td>\n",
              "      <td>Clothing</td>\n",
              "      <td>0.47</td>\n",
              "      <td>5.12</td>\n",
              "      <td>487</td>\n",
              "      <td>32</td>\n",
              "      <td>63</td>\n",
              "      <td>77</td>\n",
              "      <td>103</td>\n",
              "      <td>59</td>\n",
              "      <td>54</td>\n",
              "      <td>52</td>\n",
              "      <td>29</td>\n",
              "      <td>11</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>17904</td>\n",
              "      <td>Home</td>\n",
              "      <td>62.19</td>\n",
              "      <td>20.96</td>\n",
              "      <td>145</td>\n",
              "      <td>9</td>\n",
              "      <td>12</td>\n",
              "      <td>12</td>\n",
              "      <td>16</td>\n",
              "      <td>19</td>\n",
              "      <td>23</td>\n",
              "      <td>15</td>\n",
              "      <td>17</td>\n",
              "      <td>16</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>70838</td>\n",
              "      <td>Home</td>\n",
              "      <td>36.55</td>\n",
              "      <td>5.72</td>\n",
              "      <td>239</td>\n",
              "      <td>6</td>\n",
              "      <td>23</td>\n",
              "      <td>45</td>\n",
              "      <td>19</td>\n",
              "      <td>16</td>\n",
              "      <td>15</td>\n",
              "      <td>18</td>\n",
              "      <td>16</td>\n",
              "      <td>20</td>\n",
              "      <td>22</td>\n",
              "      <td>15</td>\n",
              "      <td>18</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>61944</td>\n",
              "      <td>Medical</td>\n",
              "      <td>3.14</td>\n",
              "      <td>3.80</td>\n",
              "      <td>175</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>14</td>\n",
              "      <td>21</td>\n",
              "      <td>30</td>\n",
              "      <td>42</td>\n",
              "      <td>33</td>\n",
              "      <td>17</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>67846</td>\n",
              "      <td>Electronics</td>\n",
              "      <td>0.76</td>\n",
              "      <td>2.01</td>\n",
              "      <td>268</td>\n",
              "      <td>8</td>\n",
              "      <td>19</td>\n",
              "      <td>45</td>\n",
              "      <td>21</td>\n",
              "      <td>20</td>\n",
              "      <td>23</td>\n",
              "      <td>24</td>\n",
              "      <td>16</td>\n",
              "      <td>24</td>\n",
              "      <td>19</td>\n",
              "      <td>22</td>\n",
              "      <td>19</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>89281</td>\n",
              "      <td>Home</td>\n",
              "      <td>13.51</td>\n",
              "      <td>51.14</td>\n",
              "      <td>278</td>\n",
              "      <td>117</td>\n",
              "      <td>90</td>\n",
              "      <td>35</td>\n",
              "      <td>21</td>\n",
              "      <td>6</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>78360</td>\n",
              "      <td>Medical</td>\n",
              "      <td>2.57</td>\n",
              "      <td>2.17</td>\n",
              "      <td>446</td>\n",
              "      <td>30</td>\n",
              "      <td>46</td>\n",
              "      <td>59</td>\n",
              "      <td>88</td>\n",
              "      <td>71</td>\n",
              "      <td>67</td>\n",
              "      <td>31</td>\n",
              "      <td>24</td>\n",
              "      <td>20</td>\n",
              "      <td>8</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>55306</td>\n",
              "      <td>Medical</td>\n",
              "      <td>0.15</td>\n",
              "      <td>2.32</td>\n",
              "      <td>230</td>\n",
              "      <td>84</td>\n",
              "      <td>72</td>\n",
              "      <td>33</td>\n",
              "      <td>21</td>\n",
              "      <td>19</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>17419</td>\n",
              "      <td>Office</td>\n",
              "      <td>1.96</td>\n",
              "      <td>3.59</td>\n",
              "      <td>493</td>\n",
              "      <td>50</td>\n",
              "      <td>61</td>\n",
              "      <td>56</td>\n",
              "      <td>88</td>\n",
              "      <td>63</td>\n",
              "      <td>70</td>\n",
              "      <td>39</td>\n",
              "      <td>35</td>\n",
              "      <td>19</td>\n",
              "      <td>7</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8efc9cac-1c13-4bc0-b668-fec9f718f297')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8efc9cac-1c13-4bc0-b668-fec9f718f297 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8efc9cac-1c13-4bc0-b668-fec9f718f297');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-266f9501-550d-488e-8e0a-d2a19d5fae5c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-266f9501-550d-488e-8e0a-d2a19d5fae5c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-266f9501-550d-488e-8e0a-d2a19d5fae5c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data",
              "summary": "{\n  \"name\": \"data\",\n  \"rows\": 10000,\n  \"fields\": [\n    {\n      \"column\": \"SKU\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26186,\n        \"min\": 10011,\n        \"max\": 99994,\n        \"num_unique_values\": 10000,\n        \"samples\": [\n          58737,\n          51861,\n          85720\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Home\",\n          \"Electronics\",\n          \"Clothing\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weight (lbs)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.876032614885212,\n        \"min\": 0.0,\n        \"max\": 98.56,\n        \"num_unique_values\": 2830,\n        \"samples\": [\n          1.82,\n          17.47,\n          49.43\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Volume (cubic ft)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.524928132362396,\n        \"min\": 0.0,\n        \"max\": 95.16,\n        \"num_unique_values\": 2532,\n        \"samples\": [\n          15.63,\n          38.71,\n          0.37\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total Inventory Picks\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 122,\n        \"min\": 85,\n        \"max\": 569,\n        \"num_unique_values\": 447,\n        \"samples\": [\n          376,\n          387,\n          434\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"7AM - 8AM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 56,\n        \"min\": 0,\n        \"max\": 200,\n        \"num_unique_values\": 163,\n        \"samples\": [\n          118,\n          97,\n          191\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"8AM - 9AM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28,\n        \"min\": 0,\n        \"max\": 100,\n        \"num_unique_values\": 88,\n        \"samples\": [\n          87,\n          9,\n          81\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"9AM -10AM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25,\n        \"min\": 0,\n        \"max\": 80,\n        \"num_unique_values\": 62,\n        \"samples\": [\n          9,\n          61,\n          11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"10AM - 11AM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 34,\n        \"min\": 0,\n        \"max\": 110,\n        \"num_unique_values\": 56,\n        \"samples\": [\n          10,\n          30,\n          90\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"11AM - 12PM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22,\n        \"min\": 0,\n        \"max\": 80,\n        \"num_unique_values\": 62,\n        \"samples\": [\n          77,\n          68,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"12PM - 1PM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18,\n        \"min\": 0,\n        \"max\": 70,\n        \"num_unique_values\": 62,\n        \"samples\": [\n          49,\n          69,\n          16\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"1PM - 2PM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 0,\n        \"max\": 60,\n        \"num_unique_values\": 57,\n        \"samples\": [\n          25,\n          18,\n          33\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2PM - 3PM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 0,\n        \"max\": 40,\n        \"num_unique_values\": 32,\n        \"samples\": [\n          28,\n          25,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"3PM - 4PM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14,\n        \"min\": 0,\n        \"max\": 60,\n        \"num_unique_values\": 55,\n        \"samples\": [\n          8,\n          59,\n          55\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"4PM - 5PM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16,\n        \"min\": 0,\n        \"max\": 60,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          49,\n          21,\n          50\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"5PM - 6PM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16,\n        \"min\": 0,\n        \"max\": 60,\n        \"num_unique_values\": 52,\n        \"samples\": [\n          39,\n          34,\n          43\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"6PM - 7PM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 0,\n        \"max\": 20,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          10,\n          13,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"7PM - 8PM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 0,\n        \"max\": 10,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          10,\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 2
        }
      ],
      "source": [
        "import pandas as pd\n",
        "data = pd.read_csv('Warehouse SKU Data.csv')\n",
        "data.head(20)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "from sklearn.decomposition import PCA\n",
        "import matplotlib.pyplot as plt\n",
        "# Assuming your data is in a pandas DataFrame called 'data'\n",
        "# and the features for PCA are in columns 6 through 18\n",
        "X = data.iloc[:, 5:18]\n",
        "\n",
        "# Standardize the features\n",
        "scaler = StandardScaler()\n",
        "X_scaled = scaler.fit_transform(X)\n",
        "# Initialize PCA with 2 components for visualization\n",
        "pca = PCA(n_components=2)\n",
        "\n",
        "# Fit PCA to the scaled data\n",
        "principalComponents = pca.fit_transform(X_scaled)\n",
        "\n",
        "# Create a DataFrame with the principal components and cluster labels\n",
        "principalDf = pd.DataFrame(data = principalComponents,\n",
        "                           columns = ['principal component 1', 'principal component 2'])\n",
        "finalDf = pd.concat([principalDf, data[['Cluster']]], axis = 1)\n",
        "fig = plt.figure(figsize = (8,8))\n",
        "ax = fig.add_subplot(1,1,1)\n",
        "ax.set_xlabel('Principal Component 1', fontsize = 15)\n",
        "ax.set_ylabel('Principal Component 2', fontsize = 15)\n",
        "ax.set_title('2 component PCA', fontsize = 20)\n",
        "targets = data['Cluster'].unique()  # Get unique cluster labels\n",
        "colors = ['r', 'g', 'b', 'c', 'm', 'y', 'k']  # Define colors for each cluster\n",
        "\n",
        "for target, color in zip(targets, colors):\n",
        "    indicesToKeep = finalDf['Cluster'] == target\n",
        "    ax.scatter(finalDf.loc[indicesToKeep, 'principal component 1'],\n",
        "               finalDf.loc[indicesToKeep, 'principal component 2'],\n",
        "               c = color, s = 50)\n",
        "ax.legend(targets)\n",
        "ax.grid()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 663
        },
        "id": "04osTRUTSPSy",
        "outputId": "c797e7df-3655-4ea7-f986-a43d0503672b"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "from sklearn.cluster import KMeans\n",
        "# Select the features from columns 6 through 18\n",
        "X = data.iloc[:, 5:18]  # Remember that Python uses 0-based indexing.\n",
        "# Create a KMeans object with 5 clusters\n",
        "kmeans = KMeans(n_clusters=5, random_state=0)  # Setting random_state ensures consistent results\n",
        "\n",
        "# Fit the model to your data\n",
        "kmeans.fit(X)\n",
        "\n",
        "# Get the cluster labels for each data point\n",
        "labels = kmeans.labels_\n",
        "data['Cluster'] = labels"
      ],
      "metadata": {
        "id": "hqBRvo8ZQerf"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data.head(20)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 731
        },
        "id": "oP3zuMi4Rlni",
        "outputId": "191fca7b-2de5-4c18-9fa3-d50b53cc5099"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      SKU     Category  Weight (lbs)  Volume (cubic ft)  \\\n",
              "0   70897         Home         26.44              17.36   \n",
              "1   13940  Electronics         11.10               2.57   \n",
              "2   44052      Hygiene          2.48               0.62   \n",
              "3   65796         Home         51.59              86.04   \n",
              "4   94236       Sports         17.96               1.58   \n",
              "5   39729       Office          3.20               1.68   \n",
              "6   69591     Clothing          0.63               6.44   \n",
              "7   70768      Medical          2.16               3.36   \n",
              "8   55894     Clothing          0.54               2.65   \n",
              "9   95487       Office          4.19               5.85   \n",
              "10  83939      Hygiene          2.34               0.42   \n",
              "11  78438     Clothing          0.47               5.12   \n",
              "12  17904         Home         62.19              20.96   \n",
              "13  70838         Home         36.55               5.72   \n",
              "14  61944      Medical          3.14               3.80   \n",
              "15  67846  Electronics          0.76               2.01   \n",
              "16  89281         Home         13.51              51.14   \n",
              "17  78360      Medical          2.57               2.17   \n",
              "18  55306      Medical          0.15               2.32   \n",
              "19  17419       Office          1.96               3.59   \n",
              "\n",
              "    Total Inventory Picks  7AM - 8AM  8AM - 9AM  9AM -10AM  10AM - 11AM  \\\n",
              "0                     121          8          9         11           10   \n",
              "1                     275        112         65         46           27   \n",
              "2                     124          6          9          8           11   \n",
              "3                     359        190         42         67           28   \n",
              "4                     285        167         40         55           12   \n",
              "5                     279          5         26         44           30   \n",
              "6                     196          0          0          0            0   \n",
              "7                     245          0          0          0            0   \n",
              "8                     274          8         22         41           17   \n",
              "9                     222          0          0          0            0   \n",
              "10                    366        172         91         52           29   \n",
              "11                    487         32         63         77          103   \n",
              "12                    145          9         12         12           16   \n",
              "13                    239          6         23         45           19   \n",
              "14                    175          0          0          0            0   \n",
              "15                    268          8         19         45           21   \n",
              "16                    278        117         90         35           21   \n",
              "17                    446         30         46         59           88   \n",
              "18                    230         84         72         33           21   \n",
              "19                    493         50         61         56           88   \n",
              "\n",
              "    11AM - 12PM  12PM - 1PM  1PM - 2PM  2PM - 3PM  3PM - 4PM  4PM - 5PM  \\\n",
              "0            10          16         25         17         12          3   \n",
              "1            19           4          2          0          0          0   \n",
              "2             8          23         27         18         10          2   \n",
              "3            17          10          5          0          0          0   \n",
              "4             7           1          3          0          0          0   \n",
              "5            17          25         25         21         24         18   \n",
              "6             4           6         18         39         27         32   \n",
              "7             1           4         28         31         59         53   \n",
              "8            27          27         25         20         19         25   \n",
              "9             3           8         30         34         25         47   \n",
              "10           11           8          3          0          0          0   \n",
              "11           59          54         52         29         11          7   \n",
              "12           19          23         15         17         16          3   \n",
              "13           16          15         18         16         20         22   \n",
              "14            1           7         14         21         30         42   \n",
              "15           20          23         24         16         24         19   \n",
              "16            6           9          0          0          0          0   \n",
              "17           71          67         31         24         20          8   \n",
              "18           19           0          1          0          0          0   \n",
              "19           63          70         39         35         19          7   \n",
              "\n",
              "    5PM - 6PM  6PM - 7PM  7PM - 8PM  Cluster  \n",
              "0           0          0          0        3  \n",
              "1           0          0          0        2  \n",
              "2           2          0          0        3  \n",
              "3           0          0          0        4  \n",
              "4           0          0          0        4  \n",
              "5          16         20          8        3  \n",
              "6          53         11          6        1  \n",
              "7          49         17          3        1  \n",
              "8          15         20          8        3  \n",
              "9          60         14          1        1  \n",
              "10          0          0          0        4  \n",
              "11          0          0          0        0  \n",
              "12          3          0          0        3  \n",
              "13         15         18          6        3  \n",
              "14         33         17         10        1  \n",
              "15         22         19          8        3  \n",
              "16          0          0          0        2  \n",
              "17          2          0          0        0  \n",
              "18          0          0          0        2  \n",
              "19          5          0          0        0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b1107f97-5d0d-4411-9e75-1f57b0a0cca4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>SKU</th>\n",
              "      <th>Category</th>\n",
              "      <th>Weight (lbs)</th>\n",
              "      <th>Volume (cubic ft)</th>\n",
              "      <th>Total Inventory Picks</th>\n",
              "      <th>7AM - 8AM</th>\n",
              "      <th>8AM - 9AM</th>\n",
              "      <th>9AM -10AM</th>\n",
              "      <th>10AM - 11AM</th>\n",
              "      <th>11AM - 12PM</th>\n",
              "      <th>12PM - 1PM</th>\n",
              "      <th>1PM - 2PM</th>\n",
              "      <th>2PM - 3PM</th>\n",
              "      <th>3PM - 4PM</th>\n",
              "      <th>4PM - 5PM</th>\n",
              "      <th>5PM - 6PM</th>\n",
              "      <th>6PM - 7PM</th>\n",
              "      <th>7PM - 8PM</th>\n",
              "      <th>Cluster</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>70897</td>\n",
              "      <td>Home</td>\n",
              "      <td>26.44</td>\n",
              "      <td>17.36</td>\n",
              "      <td>121</td>\n",
              "      <td>8</td>\n",
              "      <td>9</td>\n",
              "      <td>11</td>\n",
              "      <td>10</td>\n",
              "      <td>10</td>\n",
              "      <td>16</td>\n",
              "      <td>25</td>\n",
              "      <td>17</td>\n",
              "      <td>12</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>13940</td>\n",
              "      <td>Electronics</td>\n",
              "      <td>11.10</td>\n",
              "      <td>2.57</td>\n",
              "      <td>275</td>\n",
              "      <td>112</td>\n",
              "      <td>65</td>\n",
              "      <td>46</td>\n",
              "      <td>27</td>\n",
              "      <td>19</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>44052</td>\n",
              "      <td>Hygiene</td>\n",
              "      <td>2.48</td>\n",
              "      <td>0.62</td>\n",
              "      <td>124</td>\n",
              "      <td>6</td>\n",
              "      <td>9</td>\n",
              "      <td>8</td>\n",
              "      <td>11</td>\n",
              "      <td>8</td>\n",
              "      <td>23</td>\n",
              "      <td>27</td>\n",
              "      <td>18</td>\n",
              "      <td>10</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>65796</td>\n",
              "      <td>Home</td>\n",
              "      <td>51.59</td>\n",
              "      <td>86.04</td>\n",
              "      <td>359</td>\n",
              "      <td>190</td>\n",
              "      <td>42</td>\n",
              "      <td>67</td>\n",
              "      <td>28</td>\n",
              "      <td>17</td>\n",
              "      <td>10</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>94236</td>\n",
              "      <td>Sports</td>\n",
              "      <td>17.96</td>\n",
              "      <td>1.58</td>\n",
              "      <td>285</td>\n",
              "      <td>167</td>\n",
              "      <td>40</td>\n",
              "      <td>55</td>\n",
              "      <td>12</td>\n",
              "      <td>7</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>39729</td>\n",
              "      <td>Office</td>\n",
              "      <td>3.20</td>\n",
              "      <td>1.68</td>\n",
              "      <td>279</td>\n",
              "      <td>5</td>\n",
              "      <td>26</td>\n",
              "      <td>44</td>\n",
              "      <td>30</td>\n",
              "      <td>17</td>\n",
              "      <td>25</td>\n",
              "      <td>25</td>\n",
              "      <td>21</td>\n",
              "      <td>24</td>\n",
              "      <td>18</td>\n",
              "      <td>16</td>\n",
              "      <td>20</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>69591</td>\n",
              "      <td>Clothing</td>\n",
              "      <td>0.63</td>\n",
              "      <td>6.44</td>\n",
              "      <td>196</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>18</td>\n",
              "      <td>39</td>\n",
              "      <td>27</td>\n",
              "      <td>32</td>\n",
              "      <td>53</td>\n",
              "      <td>11</td>\n",
              "      <td>6</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>70768</td>\n",
              "      <td>Medical</td>\n",
              "      <td>2.16</td>\n",
              "      <td>3.36</td>\n",
              "      <td>245</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>28</td>\n",
              "      <td>31</td>\n",
              "      <td>59</td>\n",
              "      <td>53</td>\n",
              "      <td>49</td>\n",
              "      <td>17</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>55894</td>\n",
              "      <td>Clothing</td>\n",
              "      <td>0.54</td>\n",
              "      <td>2.65</td>\n",
              "      <td>274</td>\n",
              "      <td>8</td>\n",
              "      <td>22</td>\n",
              "      <td>41</td>\n",
              "      <td>17</td>\n",
              "      <td>27</td>\n",
              "      <td>27</td>\n",
              "      <td>25</td>\n",
              "      <td>20</td>\n",
              "      <td>19</td>\n",
              "      <td>25</td>\n",
              "      <td>15</td>\n",
              "      <td>20</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>95487</td>\n",
              "      <td>Office</td>\n",
              "      <td>4.19</td>\n",
              "      <td>5.85</td>\n",
              "      <td>222</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "      <td>8</td>\n",
              "      <td>30</td>\n",
              "      <td>34</td>\n",
              "      <td>25</td>\n",
              "      <td>47</td>\n",
              "      <td>60</td>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>83939</td>\n",
              "      <td>Hygiene</td>\n",
              "      <td>2.34</td>\n",
              "      <td>0.42</td>\n",
              "      <td>366</td>\n",
              "      <td>172</td>\n",
              "      <td>91</td>\n",
              "      <td>52</td>\n",
              "      <td>29</td>\n",
              "      <td>11</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>78438</td>\n",
              "      <td>Clothing</td>\n",
              "      <td>0.47</td>\n",
              "      <td>5.12</td>\n",
              "      <td>487</td>\n",
              "      <td>32</td>\n",
              "      <td>63</td>\n",
              "      <td>77</td>\n",
              "      <td>103</td>\n",
              "      <td>59</td>\n",
              "      <td>54</td>\n",
              "      <td>52</td>\n",
              "      <td>29</td>\n",
              "      <td>11</td>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>17904</td>\n",
              "      <td>Home</td>\n",
              "      <td>62.19</td>\n",
              "      <td>20.96</td>\n",
              "      <td>145</td>\n",
              "      <td>9</td>\n",
              "      <td>12</td>\n",
              "      <td>12</td>\n",
              "      <td>16</td>\n",
              "      <td>19</td>\n",
              "      <td>23</td>\n",
              "      <td>15</td>\n",
              "      <td>17</td>\n",
              "      <td>16</td>\n",
              "      <td>3</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>70838</td>\n",
              "      <td>Home</td>\n",
              "      <td>36.55</td>\n",
              "      <td>5.72</td>\n",
              "      <td>239</td>\n",
              "      <td>6</td>\n",
              "      <td>23</td>\n",
              "      <td>45</td>\n",
              "      <td>19</td>\n",
              "      <td>16</td>\n",
              "      <td>15</td>\n",
              "      <td>18</td>\n",
              "      <td>16</td>\n",
              "      <td>20</td>\n",
              "      <td>22</td>\n",
              "      <td>15</td>\n",
              "      <td>18</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>61944</td>\n",
              "      <td>Medical</td>\n",
              "      <td>3.14</td>\n",
              "      <td>3.80</td>\n",
              "      <td>175</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>14</td>\n",
              "      <td>21</td>\n",
              "      <td>30</td>\n",
              "      <td>42</td>\n",
              "      <td>33</td>\n",
              "      <td>17</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>67846</td>\n",
              "      <td>Electronics</td>\n",
              "      <td>0.76</td>\n",
              "      <td>2.01</td>\n",
              "      <td>268</td>\n",
              "      <td>8</td>\n",
              "      <td>19</td>\n",
              "      <td>45</td>\n",
              "      <td>21</td>\n",
              "      <td>20</td>\n",
              "      <td>23</td>\n",
              "      <td>24</td>\n",
              "      <td>16</td>\n",
              "      <td>24</td>\n",
              "      <td>19</td>\n",
              "      <td>22</td>\n",
              "      <td>19</td>\n",
              "      <td>8</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>89281</td>\n",
              "      <td>Home</td>\n",
              "      <td>13.51</td>\n",
              "      <td>51.14</td>\n",
              "      <td>278</td>\n",
              "      <td>117</td>\n",
              "      <td>90</td>\n",
              "      <td>35</td>\n",
              "      <td>21</td>\n",
              "      <td>6</td>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>78360</td>\n",
              "      <td>Medical</td>\n",
              "      <td>2.57</td>\n",
              "      <td>2.17</td>\n",
              "      <td>446</td>\n",
              "      <td>30</td>\n",
              "      <td>46</td>\n",
              "      <td>59</td>\n",
              "      <td>88</td>\n",
              "      <td>71</td>\n",
              "      <td>67</td>\n",
              "      <td>31</td>\n",
              "      <td>24</td>\n",
              "      <td>20</td>\n",
              "      <td>8</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>55306</td>\n",
              "      <td>Medical</td>\n",
              "      <td>0.15</td>\n",
              "      <td>2.32</td>\n",
              "      <td>230</td>\n",
              "      <td>84</td>\n",
              "      <td>72</td>\n",
              "      <td>33</td>\n",
              "      <td>21</td>\n",
              "      <td>19</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>17419</td>\n",
              "      <td>Office</td>\n",
              "      <td>1.96</td>\n",
              "      <td>3.59</td>\n",
              "      <td>493</td>\n",
              "      <td>50</td>\n",
              "      <td>61</td>\n",
              "      <td>56</td>\n",
              "      <td>88</td>\n",
              "      <td>63</td>\n",
              "      <td>70</td>\n",
              "      <td>39</td>\n",
              "      <td>35</td>\n",
              "      <td>19</td>\n",
              "      <td>7</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b1107f97-5d0d-4411-9e75-1f57b0a0cca4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b1107f97-5d0d-4411-9e75-1f57b0a0cca4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b1107f97-5d0d-4411-9e75-1f57b0a0cca4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6b21052b-633f-4032-a37e-a6d6982c27ea\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6b21052b-633f-4032-a37e-a6d6982c27ea')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6b21052b-633f-4032-a37e-a6d6982c27ea button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data",
              "summary": "{\n  \"name\": \"data\",\n  \"rows\": 10000,\n  \"fields\": [\n    {\n      \"column\": \"SKU\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26186,\n        \"min\": 10011,\n        \"max\": 99994,\n        \"num_unique_values\": 10000,\n        \"samples\": [\n          58737,\n          51861,\n          85720\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Category\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Home\",\n          \"Electronics\",\n          \"Clothing\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Weight (lbs)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.876032614885212,\n        \"min\": 0.0,\n        \"max\": 98.56,\n        \"num_unique_values\": 2830,\n        \"samples\": [\n          1.82,\n          17.47,\n          49.43\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Volume (cubic ft)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.524928132362396,\n        \"min\": 0.0,\n        \"max\": 95.16,\n        \"num_unique_values\": 2532,\n        \"samples\": [\n          15.63,\n          38.71,\n          0.37\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total Inventory Picks\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 122,\n        \"min\": 85,\n        \"max\": 569,\n        \"num_unique_values\": 447,\n        \"samples\": [\n          376,\n          387,\n          434\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"7AM - 8AM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 56,\n        \"min\": 0,\n        \"max\": 200,\n        \"num_unique_values\": 163,\n        \"samples\": [\n          118,\n          97,\n          191\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"8AM - 9AM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28,\n        \"min\": 0,\n        \"max\": 100,\n        \"num_unique_values\": 88,\n        \"samples\": [\n          87,\n          9,\n          81\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"9AM -10AM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25,\n        \"min\": 0,\n        \"max\": 80,\n        \"num_unique_values\": 62,\n        \"samples\": [\n          9,\n          61,\n          11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"10AM - 11AM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 34,\n        \"min\": 0,\n        \"max\": 110,\n        \"num_unique_values\": 56,\n        \"samples\": [\n          10,\n          30,\n          90\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"11AM - 12PM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22,\n        \"min\": 0,\n        \"max\": 80,\n        \"num_unique_values\": 62,\n        \"samples\": [\n          77,\n          68,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"12PM - 1PM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18,\n        \"min\": 0,\n        \"max\": 70,\n        \"num_unique_values\": 62,\n        \"samples\": [\n          49,\n          69,\n          16\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"1PM - 2PM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 0,\n        \"max\": 60,\n        \"num_unique_values\": 57,\n        \"samples\": [\n          25,\n          18,\n          33\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"2PM - 3PM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 0,\n        \"max\": 40,\n        \"num_unique_values\": 32,\n        \"samples\": [\n          28,\n          25,\n          10\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"3PM - 4PM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14,\n        \"min\": 0,\n        \"max\": 60,\n        \"num_unique_values\": 55,\n        \"samples\": [\n          8,\n          59,\n          55\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"4PM - 5PM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16,\n        \"min\": 0,\n        \"max\": 60,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          49,\n          21,\n          50\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"5PM - 6PM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16,\n        \"min\": 0,\n        \"max\": 60,\n        \"num_unique_values\": 52,\n        \"samples\": [\n          39,\n          34,\n          43\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"6PM - 7PM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 0,\n        \"max\": 20,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          10,\n          13,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"7PM - 8PM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 0,\n        \"max\": 10,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          10,\n          0,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cluster\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          0,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.to_csv('data.csv', index=False)"
      ],
      "metadata": {
        "id": "RbMRtpF5S9DH"
      },
      "execution_count": 6,
      "outputs": []
    }
  ]
}
